
Led_on_BitFeilds.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000198  080001c8  080001c8  000101c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000360  08000368  00010368  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000360  08000360  00010368  2**0
                  CONTENTS
  4 .ARM          00000000  08000360  08000360  00010368  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000360  08000368  00010368  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000360  08000360  00010360  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000364  08000364  00010364  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010368  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000368  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000368  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010368  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00010398  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000043d  00000000  00000000  000103db  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000000d6  00000000  00000000  00010818  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_loclists 00000036  00000000  00000000  000108ee  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000048  00000000  00000000  00010928  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 00000039  00000000  00000000  00010970  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00000f6e  00000000  00000000  000109a9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   0000052a  00000000  00000000  00011917  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    00003e4c  00000000  00000000  00011e41  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  0000004c  00000000  00000000  00015c90  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000072  00000000  00000000  00015cdc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c8 <__do_global_dtors_aux>:
 80001c8:	b510      	push	{r4, lr}
 80001ca:	4c05      	ldr	r4, [pc, #20]	; (80001e0 <__do_global_dtors_aux+0x18>)
 80001cc:	7823      	ldrb	r3, [r4, #0]
 80001ce:	b933      	cbnz	r3, 80001de <__do_global_dtors_aux+0x16>
 80001d0:	4b04      	ldr	r3, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x1c>)
 80001d2:	b113      	cbz	r3, 80001da <__do_global_dtors_aux+0x12>
 80001d4:	4804      	ldr	r0, [pc, #16]	; (80001e8 <__do_global_dtors_aux+0x20>)
 80001d6:	f3af 8000 	nop.w
 80001da:	2301      	movs	r3, #1
 80001dc:	7023      	strb	r3, [r4, #0]
 80001de:	bd10      	pop	{r4, pc}
 80001e0:	20000000 	.word	0x20000000
 80001e4:	00000000 	.word	0x00000000
 80001e8:	08000348 	.word	0x08000348

080001ec <frame_dummy>:
 80001ec:	b508      	push	{r3, lr}
 80001ee:	4b03      	ldr	r3, [pc, #12]	; (80001fc <frame_dummy+0x10>)
 80001f0:	b11b      	cbz	r3, 80001fa <frame_dummy+0xe>
 80001f2:	4903      	ldr	r1, [pc, #12]	; (8000200 <frame_dummy+0x14>)
 80001f4:	4803      	ldr	r0, [pc, #12]	; (8000204 <frame_dummy+0x18>)
 80001f6:	f3af 8000 	nop.w
 80001fa:	bd08      	pop	{r3, pc}
 80001fc:	00000000 	.word	0x00000000
 8000200:	20000004 	.word	0x20000004
 8000204:	08000348 	.word	0x08000348

08000208 <main>:
	RCC_AHB1ENR_t *pPCLKENR 	= (RCC_AHB1ENR_t*)0x40023830;
	GPIOx_MODER_t *pPModeReg 	= (GPIOx_MODER_t*)0x40020400;
	GPIOx_ODR_t   *pOutDtReg    = (GPIOx_ODR_t*)0x40020414;


	pPCLKENR->gpiob_en = 1;
 8000208:	4a25      	ldr	r2, [pc, #148]	; (80002a0 <main+0x98>)
 800020a:	f892 3830 	ldrb.w	r3, [r2, #2096]	; 0x830
 800020e:	f043 0302 	orr.w	r3, r3, #2
 8000212:	f882 3830 	strb.w	r3, [r2, #2096]	; 0x830
	pPModeReg->pin0_mode = 1;
 8000216:	4b23      	ldr	r3, [pc, #140]	; (80002a4 <main+0x9c>)
 8000218:	f893 1400 	ldrb.w	r1, [r3, #1024]	; 0x400
 800021c:	2201      	movs	r2, #1
 800021e:	f362 0101 	bfi	r1, r2, #0, #2
 8000222:	f883 1400 	strb.w	r1, [r3, #1024]	; 0x400
	pPModeReg->pin7_mode = 1;
 8000226:	f893 1401 	ldrb.w	r1, [r3, #1025]	; 0x401
 800022a:	f362 1187 	bfi	r1, r2, #6, #2
 800022e:	f883 1401 	strb.w	r1, [r3, #1025]	; 0x401
	pPModeReg->pin14_mode = 1;
 8000232:	f893 1403 	ldrb.w	r1, [r3, #1027]	; 0x403
 8000236:	f362 1105 	bfi	r1, r2, #4, #2
 800023a:	f883 1403 	strb.w	r1, [r3, #1027]	; 0x403
 800023e:	e01b      	b.n	8000278 <main+0x70>
while(1){

	pOutDtReg->pin_0 = 1;
	pOutDtReg->pin_7 = 1;
	pOutDtReg->pin_14 = 1;
	for(uint32_t i =0; i<1000000; i++){}
 8000240:	3301      	adds	r3, #1
 8000242:	4a19      	ldr	r2, [pc, #100]	; (80002a8 <main+0xa0>)
 8000244:	4293      	cmp	r3, r2
 8000246:	d9fb      	bls.n	8000240 <main+0x38>

	pOutDtReg->pin_0 = 0;
 8000248:	4b16      	ldr	r3, [pc, #88]	; (80002a4 <main+0x9c>)
 800024a:	f893 2414 	ldrb.w	r2, [r3, #1044]	; 0x414
 800024e:	f36f 0200 	bfc	r2, #0, #1
 8000252:	f883 2414 	strb.w	r2, [r3, #1044]	; 0x414
	pOutDtReg->pin_7 = 0;
 8000256:	b2d2      	uxtb	r2, r2
 8000258:	f36f 12c7 	bfc	r2, #7, #1
 800025c:	f883 2414 	strb.w	r2, [r3, #1044]	; 0x414
	pOutDtReg->pin_14 = 0;
 8000260:	f893 2415 	ldrb.w	r2, [r3, #1045]	; 0x415
 8000264:	f36f 1286 	bfc	r2, #6, #1
 8000268:	f883 2415 	strb.w	r2, [r3, #1045]	; 0x415
	for(uint32_t i =0; i<1000000; i++){}
 800026c:	2300      	movs	r3, #0
 800026e:	e000      	b.n	8000272 <main+0x6a>
 8000270:	3301      	adds	r3, #1
 8000272:	4a0d      	ldr	r2, [pc, #52]	; (80002a8 <main+0xa0>)
 8000274:	4293      	cmp	r3, r2
 8000276:	d9fb      	bls.n	8000270 <main+0x68>
	pOutDtReg->pin_0 = 1;
 8000278:	4b0a      	ldr	r3, [pc, #40]	; (80002a4 <main+0x9c>)
 800027a:	f893 2414 	ldrb.w	r2, [r3, #1044]	; 0x414
 800027e:	f042 0201 	orr.w	r2, r2, #1
 8000282:	f883 2414 	strb.w	r2, [r3, #1044]	; 0x414
	pOutDtReg->pin_7 = 1;
 8000286:	b2d2      	uxtb	r2, r2
 8000288:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800028c:	f883 2414 	strb.w	r2, [r3, #1044]	; 0x414
	pOutDtReg->pin_14 = 1;
 8000290:	f893 2415 	ldrb.w	r2, [r3, #1045]	; 0x415
 8000294:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8000298:	f883 2415 	strb.w	r2, [r3, #1045]	; 0x415
	for(uint32_t i =0; i<1000000; i++){}
 800029c:	2300      	movs	r3, #0
 800029e:	e7d0      	b.n	8000242 <main+0x3a>
 80002a0:	40023000 	.word	0x40023000
 80002a4:	40020000 	.word	0x40020000
 80002a8:	000f423f 	.word	0x000f423f

080002ac <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002ac:	480d      	ldr	r0, [pc, #52]	; (80002e4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002ae:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002b0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002b4:	480c      	ldr	r0, [pc, #48]	; (80002e8 <LoopForever+0x6>)
  ldr r1, =_edata
 80002b6:	490d      	ldr	r1, [pc, #52]	; (80002ec <LoopForever+0xa>)
  ldr r2, =_sidata
 80002b8:	4a0d      	ldr	r2, [pc, #52]	; (80002f0 <LoopForever+0xe>)
  movs r3, #0
 80002ba:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002bc:	e002      	b.n	80002c4 <LoopCopyDataInit>

080002be <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002be:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002c0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002c2:	3304      	adds	r3, #4

080002c4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002c4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002c6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002c8:	d3f9      	bcc.n	80002be <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002ca:	4a0a      	ldr	r2, [pc, #40]	; (80002f4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002cc:	4c0a      	ldr	r4, [pc, #40]	; (80002f8 <LoopForever+0x16>)
  movs r3, #0
 80002ce:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002d0:	e001      	b.n	80002d6 <LoopFillZerobss>

080002d2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002d2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002d4:	3204      	adds	r2, #4

080002d6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002d6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002d8:	d3fb      	bcc.n	80002d2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002da:	f000 f811 	bl	8000300 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002de:	f7ff ff93 	bl	8000208 <main>

080002e2 <LoopForever>:

LoopForever:
  b LoopForever
 80002e2:	e7fe      	b.n	80002e2 <LoopForever>
  ldr   r0, =_estack
 80002e4:	20050000 	.word	0x20050000
  ldr r0, =_sdata
 80002e8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002ec:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002f0:	08000368 	.word	0x08000368
  ldr r2, =_sbss
 80002f4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002f8:	2000001c 	.word	0x2000001c

080002fc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002fc:	e7fe      	b.n	80002fc <ADC_IRQHandler>
	...

08000300 <__libc_init_array>:
 8000300:	b570      	push	{r4, r5, r6, lr}
 8000302:	4d0d      	ldr	r5, [pc, #52]	; (8000338 <__libc_init_array+0x38>)
 8000304:	4c0d      	ldr	r4, [pc, #52]	; (800033c <__libc_init_array+0x3c>)
 8000306:	1b64      	subs	r4, r4, r5
 8000308:	10a4      	asrs	r4, r4, #2
 800030a:	2600      	movs	r6, #0
 800030c:	42a6      	cmp	r6, r4
 800030e:	d109      	bne.n	8000324 <__libc_init_array+0x24>
 8000310:	4d0b      	ldr	r5, [pc, #44]	; (8000340 <__libc_init_array+0x40>)
 8000312:	4c0c      	ldr	r4, [pc, #48]	; (8000344 <__libc_init_array+0x44>)
 8000314:	f000 f818 	bl	8000348 <_init>
 8000318:	1b64      	subs	r4, r4, r5
 800031a:	10a4      	asrs	r4, r4, #2
 800031c:	2600      	movs	r6, #0
 800031e:	42a6      	cmp	r6, r4
 8000320:	d105      	bne.n	800032e <__libc_init_array+0x2e>
 8000322:	bd70      	pop	{r4, r5, r6, pc}
 8000324:	f855 3b04 	ldr.w	r3, [r5], #4
 8000328:	4798      	blx	r3
 800032a:	3601      	adds	r6, #1
 800032c:	e7ee      	b.n	800030c <__libc_init_array+0xc>
 800032e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000332:	4798      	blx	r3
 8000334:	3601      	adds	r6, #1
 8000336:	e7f2      	b.n	800031e <__libc_init_array+0x1e>
 8000338:	08000360 	.word	0x08000360
 800033c:	08000360 	.word	0x08000360
 8000340:	08000360 	.word	0x08000360
 8000344:	08000364 	.word	0x08000364

08000348 <_init>:
 8000348:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800034a:	bf00      	nop
 800034c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800034e:	bc08      	pop	{r3}
 8000350:	469e      	mov	lr, r3
 8000352:	4770      	bx	lr

08000354 <_fini>:
 8000354:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000356:	bf00      	nop
 8000358:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800035a:	bc08      	pop	{r3}
 800035c:	469e      	mov	lr, r3
 800035e:	4770      	bx	lr
